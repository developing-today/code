# hyprctl clients
monitor=,preferred,auto,auto
exec-once = dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY
exec-once = hyprpaper
# exec-once = swaync
exec-once = mako
# exec-once = dunst
exec-once = touch /tmp/waybar_autotoggle
exec-once = GTK_THEME=Adapta waybar
# exec-once = nm-applet
exec-once = sleep 4 ; wpa_gui -t
exec-once = [workspace 10 silent] element-desktop
windowrule = workspace 10 silent, ^(Element)$
exec-once = [workspace 9 silent] zulip
windowrule = workspace 9 silent, ^(Zulip)$
exec-once = hyprctl dispatch workspace 3 && zen && sleep 0.3 && hyprctl dispatch workspace 2
exec-once = hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta") | select(.title | test("- YouTube —"; "i")) | .address' | xargs -I {} hyprctl dispatch movetoworkspacesilent "9,address:{}"
exec-once = sleep 1; hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta") | select(.title | test("- YouTube —"; "i")) | .address' | xargs -I {} hyprctl dispatch movetoworkspacesilent "9,address:{}"
exec-once = sleep 2; hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta") | select(.title | test("- YouTube —"; "i")) | .address' | xargs -I {} hyprctl dispatch movetoworkspacesilent "9,address:{}"
exec-once = sleep 3; hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta") | select(.title | test("- YouTube —"; "i")) | .address' | xargs -I {} hyprctl dispatch movetoworkspacesilent "9,address:{}"
exec-once = sleep 4; hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta") | select(.title | test("- YouTube —"; "i")) | .address' | xargs -I {} hyprctl dispatch movetoworkspacesilent "9,address:{}"
exec-once = sleep 5; hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta") | select(.title | test("- YouTube —"; "i")) | .address' | xargs -I {} hyprctl dispatch movetoworkspacesilent "9,address:{}"
exec-once = sleep 3; [ "$(hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta" and .workspace.id == 3) | .initialClass')" ] || (current_workspace=$(hyprctl activeworkspace -j | jq .id) && hyprctl dispatch workspace 3 && zen && sleep 0.2 && hyprctl dispatch workspace $current_workspace;)
#exec-once = sleep 3; [ "$(hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta" and .workspace.id == 3) | .initialClass')" ] || (current_workspace=$(hyprctl activeworkspace -j | jq .id) && hyprctl dispatch workspace 3 && zen && sleep 0.2 && hyprctl dispatch workspace $current_workspace;)
# exec-once = [workspace 4 silent] zen
# exec-once = [workspace 3 silent] sleep 2; zen
# exec-once = sleep 2; [ "$(hyprctl clients -j | jq -r '.[] | select(.initialClass == "zen-beta" and .workspace.id == 3) | .initialClass')" ] || hyprctl dispatch exec "[workspace 3 silent] zen"
# exec-once = firefox
# windowrule = workspace 3 silent, ^(zen-beta)$
# windowrule = workspace 9 silent, title:^(YouTube)(.*)$
exec-once = [workspace 2 silent] zeditor
# windowrule = workspace 2 silent, ^(dev.zed.Zed)$
#exec-once = [workspace 1 silent] ghostty
exec-once = [workspace 1 silent] ghostty -e 'curl http://wttr.in ; exec $SHELL'
# exec-once = [workspace 1 silent] kitty
exec-once = dconf write /org/gnome/desktop/interface/gtk-theme "'Adwaita'"
exec-once = dconf write /org/gnome/desktop/interface/icon-theme "'Flat-Remix-Red-Dark'"
exec-once = dconf write /org/gnome/desktop/interface/document-font-name "'Noto Sans Medium 11'"
exec-once = dconf write /org/gnome/desktop/interface/font-name "'Noto Sans Medium 11'"
exec-once = dconf write /org/gnome/desktop/interface/monospace-font-name "'Noto Sans Mono Medium 11'"
env = XCURSOR_SIZE,24
env = XCURSOR_THEME,Vanilla-DMZ
# env = HYPRCURSOR_THEME,Vanilla-DMZ
env = HYPRCURSOR_THEME,rose-pine-hyprcursor
env = HYPRCURSOR_SIZE,24
windowrulev2 = immediate, class:.*
windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.
input {
  follow_mouse = 1
  kb_layout = us
  kb_model =
  kb_options = ctrl:nocaps
  kb_variant =
  sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
  touchpad {
    natural_scroll = yes
  }
}
general {
  allow_tearing = true
  border_size = 0
  col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
  col.inactive_border = rgba(595959aa)
  gaps_in = 0
  gaps_out = 0
  layout = dwindle
}
decoration {
  blur {
    enabled = false
    size = 3
    passes = 1
  }
  shadow {
    enabled = false
  }
  # col.shadow = rgba(1a1a1aee)
  # drop_shadow = no
  rounding = 0 # 10
  # shadow_range = 4
  # shadow_render_power = 3
}
animations {
  enabled = no
}
dwindle {
  preserve_split = yes # you probably want this
  pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
}
master {
  new_status = master
}
gestures {
  workspace_swipe = off
}
# env = HYPRCURSOR_THEME,MyCursor
# env = HYPRCURSOR_SIZE,24
#####################################################
#####################################################
# TODO: hyprctl setcursor ____
# TODO: check out https://sr.ht/~emersion/kanshi/
#####################################################
#####################################################
# GROUPS BY KEY AFTER HERE ARE SORTED ###############
#####################################################
#####################################################
$mainMod = SUPER
#####################################################
#####################################################

# TOGGLE WAYBAR
bind = $mainMod, B, exec, if [ -e /tmp/waybar_autotoggle ]; then rm /tmp/waybar_autotoggle; else touch /tmp/waybar_autotoggle; fi
bind = SUPER, R, exec, pkill -SIGUSR1 waybar
bind = , SUPER_L, exec, if [ -e /tmp/waybar_autotoggle ]; then pkill -SIGUSR1 waybar; fi
bindrt = SUPER, SUPER_L, exec, if [ -e /tmp/waybar_autotoggle ]; then pkill -SIGUSR1 waybar; fi
bind = SUPER+SHIFT, R, exec, hyprctl reload

# Assorted
# todo how to target forward slash key?
# bind = $mainMod, /, togglesplit, # dwindle <-- what is dwindle ??
bind = $mainMod, Z, togglesplit, # dwindle <-- what is dwindle ??
bind = $mainMod, C, killactive,
bind = $mainMod, E, exec, zeditor ~/code
# bind = $mainMod, F, exec, firefox
bind = $mainMod, F, exec, zen
bind = $mainMod, d, exec, dolphin
bind = $mainMod, ., exec, emote
bind = $mainMod, M, exit,
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod SHIFT, Q, movetoworkspace, e-1
bind = $mainMod SHIFT, W, movetoworkspace, e+1
bind = $mainMod, Q, exec, ghostty # kitty # alacritty
bind = $mainMod, RETURN, exec, ghostty # kitty # alacritty
# bind = $mainMod, R, exec, wofi --show drun
# bind = $mainMod, R, exec, fuzzel
bind = $mainMod, SPACE, exec, fuzzel
bind = $mainMod, V, togglefloating,

# Print
bind = SHIFT, Print, exec, hyprshot -m region
bind = , Print, exec, hyprshot -m output

# F11
bind = ALT, F11, exec, hyprshot -m region
bind = CTRL, F11, exec, hyprshot -m region
bind = SHIFT, F11, exec, hyprshot -m active
bind = SUPER, F11, fullscreenstate, -1 2
# S
# bind = ALT + SHIFT, S, exec, hyprshot -m active
# bind = SUPER + ALT, S, exec, hyprshot -m output
# bind = SUPER + SHIFT, S, exec, hyprshot -m region

# MOUSE
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1
bindm = $mainMod, mouse:272, movewindow # Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:273, resizewindow # Move/resize windows with mainMod + LMB/RMB and dragging

# XF86
bind= , XF86MonBrightnessDown , exec , brightnessctl set 5%- # brillo -q -A 5
bind= , XF86MonBrightnessUp , exec , brightnessctl set +5% # brillo -q -U 5
bindel=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel=, XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindl=, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl=, XF86AudioNext, exec, playerctl next
bindl=, XF86AudioPlay, exec, playerctl play-pause
bindl=, XF86AudioPrev, exec, playerctl previous

# 1234567890
bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod, 0, workspace, 10
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9

# UP DOWN LEFT RIGHT
bind = $mainMod ALT CTRL, down, movetoworkspace, 4
bind = $mainMod ALT CTRL, left, movetoworkspace, 1
bind = $mainMod ALT CTRL, right, movetoworkspace, 2
bind = $mainMod ALT CTRL, up, movetoworkspace, 3
# TODO: allow moving floating windows
bind = $mainMod ALT, down, movewindow, d
bind = $mainMod ALT, left, movewindow, l
bind = $mainMod ALT, right, movewindow, r
bind = $mainMod ALT, up, movewindow, u
bind = $mainMod CTRL SHIFT, down, movetoworkspace, e+2
bind = $mainMod CTRL SHIFT, left, movetoworkspace, e-1
bind = $mainMod CTRL SHIFT, right, movetoworkspace, e+1
bind = $mainMod CTRL SHIFT, up, movetoworkspace, e-2
bind = $mainMod CTRL, down, workspace, e+2
bind = $mainMod CTRL, left, workspace, e-1
bind = $mainMod CTRL, right, workspace, e+1
bind = $mainMod CTRL, up, workspace, e-2
bind = $mainMod SHIFT, down, resizeactive, 0 10
bind = $mainMod SHIFT, left, resizeactive, -10 0
bind = $mainMod SHIFT, right, resizeactive, 10 0
bind = $mainMod SHIFT, up, resizeactive, 0 -10
bind = $mainMod, down, movefocus, d
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u

# TAB,ASDF
bind = $mainMod, TAB, workspace, m+1
bind = $mainMod SHIFT, TAB, workspace, m-1
bind = $mainMod, A, workspace, m-1
bind = $mainMod, S, workspace, m+1
bind = $mainMod SHIFT, A, focusmonitor, r
bind = $mainMod SHIFT, S, focusmonitor, l
# bind = $mainMod ALT SHIFT, A, movetoworkspacesilent, 1
# bind = $mainMod ALT SHIFT, D, movetoworkspacesilent, 3
# bind = $mainMod ALT SHIFT, F, movetoworkspacesilent, 4
# bind = $mainMod ALT SHIFT, S, movetoworkspacesilent, 2
# bind = $mainMod ALT, A, movewindow, l
# bind = $mainMod ALT, D, movewindow, u
# bind = $mainMod ALT, F, movewindow, d
# bind = $mainMod ALT, S, movewindow, r
# bind = $mainMod CTRL, A, workspace, 5
# bind = $mainMod CTRL, D, workspace, 7
# bind = $mainMod CTRL, F, workspace, 8
# bind = $mainMod CTRL, S, workspace, 6
# bind = $mainMod SHIFT, A, movetoworkspace, 1
# bind = $mainMod SHIFT, D, movetoworkspace, 3
# bind = $mainMod SHIFT, F, movetoworkspace, 4
# bind = $mainMod SHIFT, S, movetoworkspace, 2
# bind = $mainMod, D, workspace, 3
# bind = $mainMod, F, workspace, 4

# HJKL
bind = $mainMod ALT CTRL SHIFT, H, movetoworkspacesilent, 1
bind = $mainMod ALT CTRL SHIFT, J, movetoworkspacesilent, 2
bind = $mainMod ALT CTRL SHIFT, K, movetoworkspacesilent, 3
bind = $mainMod ALT CTRL SHIFT, L, movetoworkspacesilent, 4
bind = $mainMod ALT CTRL, H, workspace, 5
bind = $mainMod ALT CTRL, J, workspace, 6
bind = $mainMod ALT CTRL, K, workspace, 7
bind = $mainMod ALT CTRL, L, workspace, 8
bind = $mainMod ALT SHIFT, H, movetoworkspacesilent, 5
bind = $mainMod ALT SHIFT, J, movetoworkspacesilent, 6
bind = $mainMod ALT SHIFT, K, movetoworkspacesilent, 7
bind = $mainMod ALT SHIFT, L, movetoworkspacesilent, 8
bind = $mainMod ALT, h, movewindow, l
bind = $mainMod ALT, j, movewindow, d
bind = $mainMod ALT, k, movewindow, u
bind = $mainMod ALT, l, movewindow, r
bind = $mainMod CTRL SHIFT, H, movetoworkspace, 1
bind = $mainMod CTRL SHIFT, J, movetoworkspace, 2
bind = $mainMod CTRL SHIFT, K, movetoworkspace, 3
bind = $mainMod CTRL SHIFT, L, movetoworkspace, 4
bind = $mainMod CTRL, H, workspace, 1
bind = $mainMod CTRL, J, workspace, 2
bind = $mainMod CTRL, K, workspace, 3
bind = $mainMod CTRL, L, workspace, 4
bind = $mainMod SHIFT, H, movetoworkspace, 5
bind = $mainMod SHIFT, J, movetoworkspace, 6
bind = $mainMod SHIFT, K, movetoworkspace, e-1
bind = $mainMod SHIFT, L, movetoworkspace, e+1
bind = $mainMod, h, movefocus, l
bind = $mainMod, j, movefocus, d
bind = $mainMod, k, movefocus, u
bind = $mainMod, l, movefocus, r

# G
# bind = $mainMod ALT CTRL SHIFT, G, mouse_down, ,1
# bind = $mainMod ALT CTRL, G, mouse_down, ,5g
# bind = $mainMod ALT SHIFT, G, mouse_down, ,20
# bind = $mainMod ALT, G, mouse_down, ,10
# bind = $mainMod CTRL SHIFT, G, mouse_up, ,1
# bind = $mainMod CTRL, G, mouse_up, ,5
# bind = $mainMod SHIFT, G, mouse_up, ,20
# bind = $mainMod, G, mouse_up, ,10


plugin:dynamic-cursors {

    # enables the plugin
    enabled = true

    # sets the cursor behaviour, supports these values:
    # tilt    - tilt the cursor based on x-velocity
    # rotate  - rotate the cursor based on movement direction
    # stretch - stretch the cursor shape based on direction and velocity
    # none    - do not change the cursors behaviour
    # mode = tilt
    mode = stretch

    # minimum angle difference in degrees after which the shape is changed
    # smaller values are smoother, but more expensive for hw cursors
    threshold = 1

    # override the mode behaviour per shape
    # this is a keyword and can be repeated many times
    # by default, there are no rules added
    # see the dedicated `shape rules` section below!
    # shaperule = <shape-name>, <mode> (optional), <property>: <value>, ...
    # shaperule = <shape-name>, <mode> (optional), <property>: <value>, ...
    # ...
    shaperule = text, rotate:offset: 90
    # use stretch mode when grabbing, and set the limit low
    shaperule = grab, stretch, stretch:limit: 1000
    # do not show any effects on clientside cursors
    # shaperule = clientside, none

    # for mode = rotate
    rotate {

        # length in px of the simulated stick used to rotate the cursor
        # most realistic if this is your actual cursor size
        length = 20

        # clockwise offset applied to the angle in degrees
        # this will apply to ALL shapes
        offset = 0.0
    }

    # for mode = tilt
    tilt {

        # controls how powerful the tilt is, the lower, the more power
        # this value controls at which speed (px/s) the full tilt is reached
        limit = 100
        # 5000

        # relationship between speed and tilt, supports these values:
        # linear             - a linear function is used
        # quadratic          - a quadratic function is used (most realistic to actual air drag)
        # negative_quadratic - negative version of the quadratic one, feels more aggressive
        function = negative_quadratic
    }

    # for mode = stretch
    stretch {

        # controls how much the cursor is stretched
        # this value controls at which speed (px/s) the full stretch is reached
        limit = 100
        # 3000

        # relationship between speed and stretch amount, supports these values:
        # linear             - a linear function is used
        # quadratic          - a quadratic function is used
        # negative_quadratic - negative version of the quadratic one, feels more aggressive
        function = negative_quadratic
    }

    # configure shake to find
    # magnifies the cursor if its is being shaken
    shake {

        # enables shake to find
        enabled = true

        # use nearest-neighbour (pixelated) scaling when shaking
        # may look weird when effects are enabled
        nearest = true

        # controls how soon a shake is detected
        # lower values mean sooner
        threshold = 2.0

        # magnification level immediately after shake start
        base = 4.0
        # magnification increase per second when continuing to shake
        speed = 4.0
        # how much the speed is influenced by the current shake intensitiy
        influence = 0.0

        # maximal magnification the cursor can reach
        # values below 1 disable the limit (e.g. 0)
        limit = 0.0

        # time in millseconds the cursor will stay magnified after a shake has ended
        timeout = 2000

        # show cursor behaviour `tilt`, `rotate`, etc. while shaking
        effects = true

        # enable ipc events for shake
        # see the `ipc` section below
        ipc = true
    }

    # use hyprcursor to get a higher resolution texture when the cursor is magnified
    # see the `hyprcursor` section below
    hyprcursor {

        # use nearest-neighbour (pixelated) scaling when magnifing beyond texture size
        # this will also have effect without hyprcursor support being enabled
        # 0 / false - never use pixelated scaling
        # 1 / true  - use pixelated when no highres image
        # 2         - always use pixleated scaling
        nearest = true

        # enable dedicated hyprcursor support
        enabled = true

        # resolution in pixels to load the magnified shapes at
        # be warned that loading a very high-resolution image will take a long time and might impact memory consumption
        # -1 means we use [normal cursor size] * [shake:base option]
        resolution = -1

        # shape to use when clientside cursors are being magnified
        # see the shape-name property of shape rules for possible names
        # specifying clientside will use the actual shape, but will be pixelated
        fallback = clientside
    }
}
